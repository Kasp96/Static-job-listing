import{buttonComponents}from"./buttons.min.js";var createComponents=function(t,e){var n=document.querySelector(".main-container"),o=document.createElement("div"),a=buttonNew,s=buttonFeature;!0===t.featured?o.setAttribute("data-new","true"):s="",!0!==t.new&&(a=""),o.id=e,o.classList.add("jobs__box","flex-column","flex-md-row","align-items-md-center","py-5","position-relative"),o.innerHTML='<img class="jobs__logo" src="'.concat(t.logo,'" alt="company logo">\n                \t<div class="jobs__offer me-md-3 me-lg-0">\n                    <div class="jobs__header d-flex gap-3 gap-md-2">\n                        <p class="jobs__company-name me-4 me-md-3 mb-0">').concat(t.company,"</p>\n\t\t\t\t\t\t").concat(a,"\n                        ").concat(s,'\n                    </div>\n                    <p class="jobs__offered-job m-md-0 my-md-1 ">').concat(t.position,' </p>\n                    <p class="jobs__job-offer d-flex align-items-center\n                    pb-1 p-md-1 m-md-0">\n                        <span>').concat(t.postedAt,'</span>\n                        <span class="dot">&bull;</span>\n                        <span>').concat(t.contract,'</span>\n                        <span class="dot">&bull;</span>\n                        <span>').concat(t.location,'</span>\n                    </p>\n                \t</div>\n                \t<div class="jobs__tags d-flex gap-4 flex-wrap ms-md-auto">\n                \t</div>'),n.appendChild(o),document.querySelectorAll(".jobs__box"),o.querySelector(".jobs__tags");buttonComponents()},buttonNew='<button class="jobs__header__badge jobs__header__badge--new">new!</button>',buttonFeature='<button class="jobs__header__badge jobs__header__badge--featured">featured</button>';export{createComponents,buttonNew,buttonFeature};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMuanMiXSwibmFtZXMiOlsiYnV0dG9uQ29tcG9uZW50cyIsImNvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJuZXdMaXN0aW5nIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYnRuTmV3IiwiYnV0dG9uTmV3IiwiYnRuRmVhdHVyZSIsImJ1dHRvbkZlYXR1cmUiLCJvYmoiLCJmZWF0dXJlZCIsImlkIiwiaW5uZXJIVE1MIiwiYXBwZW5kQ2hpbGQiLCJjb25jYXQiLCJsb2dvIiwiY29tcGFueSIsInBvc2l0aW9uIiwicG9zdGVkQXQiLCJjb250cmFjdCIsImxvY2F0aW9uIiwicXVlcnlTZWxlY3RvckFsbCJdLCJtYXBwaW5ncyI6Ik9BQVNBLGdCQUEwQyxLQUFsQixtQkFHMUJDLElBQUFBLGlCQUFxQkMsU0FBQUEsRUFBQUEsR0FBM0IsSUFDTUMsRUFBYUMsU0FBU0MsY0FBYyxpQkFBTSxFQUM1Q0MsRUFBU0MsU0FBU0YsY0FBQSxLQUFBLEVBQ3RCQyxFQUFJRSxVQUVKQSxFQUFnQkMsY0FFVCxDQUFBLElBQU5DLEVBQU1DLFNBRE5SLEVBRUFLLGFBQWUsV0FBQSxNQUFBLEVBRWhCQSxFQUFPLEdBRVAsQ0FBQSxJQUFBRSxFQUFBLE1BQ0FQLEVBQUFBLElBQUFBLEVBVVVTLEdBQUNDLEVBVFhWLEVBNkJVVyxVQUFBQSxJQUNWLFlBQ0EsY0E1QkMsY0E4QkQsd0JBNUJDLE9BOEJEZCxtQkE1QkEsRUFFQUcsRUE2QkFVLFVBQUEsZ0NBQUFFLE9BQUFMLEVBQUFNLEtBQUEsb09BQUEsRUFBQUQsT0FHQUwsRUFBQU8sUUFBQSxvQkFBQSxFQUFBRixPQUNBVCxFQUFBLDRCQUFBLEVBQUFTLE9BNUJ5QlAsRUFBVSxpR0FBQSxFQUFBTyxPQStCbkNMLEVBQUFRLFNBQUEsMEpBQUEsRUFBQUgsT0FHQUwsRUFBQVMsU0FBQSxrR0FBQSxFQUFBSixPQUVBTCxFQUFBVSxTQUFBLGtHQUFBLEVBQUFMLE9BRUFMLEVBQUFXLFNBQUEscUtBQUEsRUFRRHBCLEVBQWFRLFlBQUFBLENBQ1osRUEvQm9CTCxTQUFTa0IsaUJBQWlCLFlBQVksRUFDcENuQixFQUFXRCxjQUFjLGFBQWEsRUFJNURGLGlCQUFpQixDQXFCbEIsRUFFYU8sVUFDWiw2RUFDWUUsY0FDWiw2RkEzRU1SLGlCQXdFTU0sVUFFQUUsYUFDeUUiLCJmaWxlIjoiY29tcG9uZW50cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBidXR0b25Db21wb25lbnRzIH0gZnJvbSAnLi9idXR0b25zLm1pbi5qcyc7XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlQ29tcG9uZW50cyA9IChvYmosIGxpc3RpbmdJRCkgPT4ge1xyXG5cdGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluLWNvbnRhaW5lcicpO1xyXG5cdGNvbnN0IG5ld0xpc3RpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRsZXQgYnRuTmV3ID0gYnV0dG9uTmV3O1xyXG5cdGxldCBidG5GZWF0dXJlID0gYnV0dG9uRmVhdHVyZTtcclxuXHJcblx0aWYgKG9iai5mZWF0dXJlZCA9PT0gdHJ1ZSkge1xyXG5cdFx0bmV3TGlzdGluZy5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmV3JywgJ3RydWUnKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0YnRuRmVhdHVyZSA9ICcnO1xyXG5cdH1cclxuXHRpZiAob2JqLm5ldyAhPT0gdHJ1ZSkge1xyXG5cdFx0YnRuTmV3ID0gJyc7XHJcblx0fVxyXG5cdG5ld0xpc3RpbmcuaWQgPSBsaXN0aW5nSUQ7XHJcblx0bmV3TGlzdGluZy5jbGFzc0xpc3QuYWRkKFxyXG5cdFx0J2pvYnNfX2JveCcsXHJcblx0XHQnZmxleC1jb2x1bW4nLFxyXG5cdFx0J2ZsZXgtbWQtcm93JyxcclxuXHRcdCdhbGlnbi1pdGVtcy1tZC1jZW50ZXInLFxyXG5cdFx0J3B5LTUnLFxyXG5cdFx0J3Bvc2l0aW9uLXJlbGF0aXZlJ1xyXG5cdCk7XHJcblxyXG5cdG5ld0xpc3RpbmcuaW5uZXJIVE1MID0gYDxpbWcgY2xhc3M9XCJqb2JzX19sb2dvXCIgc3JjPVwiJHtvYmoubG9nb31cIiBhbHQ9XCJjb21wYW55IGxvZ29cIj5cclxuICAgICAgICAgICAgICAgIFx0PGRpdiBjbGFzcz1cImpvYnNfX29mZmVyIG1lLW1kLTMgbWUtbGctMFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJqb2JzX19oZWFkZXIgZC1mbGV4IGdhcC0zIGdhcC1tZC0yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiam9ic19fY29tcGFueS1uYW1lIG1lLTQgbWUtbWQtMyBtYi0wXCI+JHtvYmouY29tcGFueX08L3A+XHJcblx0XHRcdFx0XHRcdCR7YnRuTmV3fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAke2J0bkZlYXR1cmV9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJqb2JzX19vZmZlcmVkLWpvYiBtLW1kLTAgbXktbWQtMSBcIj4ke29iai5wb3NpdGlvbn0gPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiam9ic19fam9iLW9mZmVyIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXJcclxuICAgICAgICAgICAgICAgICAgICBwYi0xIHAtbWQtMSBtLW1kLTBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtvYmoucG9zdGVkQXR9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImRvdFwiPiZidWxsOzwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtvYmouY29udHJhY3R9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImRvdFwiPiZidWxsOzwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JHtvYmoubG9jYXRpb259PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgIFx0PC9kaXY+XHJcbiAgICAgICAgICAgICAgICBcdDxkaXYgY2xhc3M9XCJqb2JzX190YWdzIGQtZmxleCBnYXAtNCBmbGV4LXdyYXAgbXMtbWQtYXV0b1wiPlxyXG4gICAgICAgICAgICAgICAgXHQ8L2Rpdj5gO1xyXG5cclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQobmV3TGlzdGluZyk7XHJcblx0Y29uc3QgYWxsTGlzdGluZ3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuam9ic19fYm94Jyk7XHJcblx0Y29uc3QgdGFnc0NvbnRhaW5lciA9IG5ld0xpc3RpbmcucXVlcnlTZWxlY3RvcignLmpvYnNfX3RhZ3MnKTtcclxuXHJcblx0Ly8gT0dBUk5BQyBKQUsgSU1QT1JUT1dBQyBURSBCVVRUT04gQ09NUE9ORU5UWSFcclxuXHJcblx0YnV0dG9uQ29tcG9uZW50cygpO1xyXG5cdC8vIGNvbnN0IHRhZ3NBcnJheSA9IFtvYmoucm9sZSwgb2JqLmxldmVsXTtcclxuXHQvLyB0YWdzQXJyYXkuZm9yRWFjaCgodGFnKSA9PiB7XHJcblx0Ly8gXHRjb25zdCBuZXdUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuXHQvLyBcdG5ld1RhZy5jbGFzc0xpc3QuYWRkKCdqb2JzX19idXR0b24nKTtcclxuXHQvLyBcdG5ld1RhZy5pbm5lclRleHQgPSB0YWc7XHJcblx0Ly8gXHR0YWdzQ29udGFpbmVyLmFwcGVuZENoaWxkKG5ld1RhZyk7XHJcblx0Ly8gfSk7XHJcblxyXG5cdC8vIG9iai5sYW5ndWFnZXMuZm9yRWFjaCgobGFuZykgPT4ge1xyXG5cdC8vIFx0Y29uc3QgbmV3TGFuZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG5cdC8vIFx0bmV3TGFuZy5jbGFzc0xpc3QuYWRkKCdqb2JzX19idXR0b24nKTtcclxuXHQvLyBcdG5ld0xhbmcuaW5uZXJUZXh0ID0gbGFuZztcclxuXHQvLyBcdHRhZ3NDb250YWluZXIuYXBwZW5kQ2hpbGQobmV3TGFuZyk7XHJcblx0Ly8gfSk7XHJcblx0Ly8gb2JqLnRvb2xzLmZvckVhY2goKHRvb2wpID0+IHtcclxuXHQvLyBcdGNvbnN0IG5ld1Rvb2wgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuXHQvLyBcdG5ld1Rvb2wuY2xhc3NMaXN0LmFkZCgnam9ic19fYnV0dG9uJyk7XHJcblx0Ly8gXHRuZXdUb29sLmlubmVyVGV4dCA9IHRvb2w7XHJcblx0Ly8gXHR0YWdzQ29udGFpbmVyLmFwcGVuZENoaWxkKG5ld1Rvb2wpO1xyXG5cdC8vIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGJ1dHRvbk5ldyA9XHJcblx0JzxidXR0b24gY2xhc3M9XCJqb2JzX19oZWFkZXJfX2JhZGdlIGpvYnNfX2hlYWRlcl9fYmFkZ2UtLW5ld1wiPm5ldyE8L2J1dHRvbj4nO1xyXG5leHBvcnQgY29uc3QgYnV0dG9uRmVhdHVyZSA9XHJcblx0JzxidXR0b24gY2xhc3M9XCJqb2JzX19oZWFkZXJfX2JhZGdlIGpvYnNfX2hlYWRlcl9fYmFkZ2UtLWZlYXR1cmVkXCI+ZmVhdHVyZWQ8L2J1dHRvbj4nO1xyXG4iXX0=
